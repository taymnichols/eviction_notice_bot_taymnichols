name: Run Scraper and Update Location Data

on:
  push:
    branches:
      - main  # Best practice to run on a specific branch like main
  schedule:
    - cron: "0 23 * * 5"  # Runs every Friday at 6 PM EST (23:00 UTC)

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Using a specific version is recommended

      # New step to install the Tesseract OCR engine required by pytesseract
      - name: Install Tesseract OCR
        run: |
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr
      
      # Updated dependencies to match your new scripts
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 pdfplumber pandas pytesseract Pillow tqdm

      - name: Run Scraper
        # This should be your new hybrid script (pdfplumber + OCR)
        run: python scrape.py

      - name: Check if CSV was updated
        id: check_files
        run: |
          if git diff --name-only | grep -q "eviction_notices.csv"; then
            echo "csv_updated=true" >> $GITHUB_OUTPUT
            echo "CSV file was updated, will run geocoder."
          else
            echo "csv_updated=false" >> $GITHUB_OUTPUT
            echo "No changes detected in CSV file, skipping geocoder."
          fi

      - name: Run Address Geocoding
        id: geocoding
        if: steps.check_files.outputs.csv_updated == 'true'
        run: |
          # This should be your geocoding script
          python add_ward.py
          if [ $? -eq 0 ] && [ -f "eviction_data_ward.csv" ]; then
            echo "geocoding_complete=true" >> $GITHUB_OUTPUT
          else
            echo "geocoding_complete=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_files.outputs.csv_updated == 'true' # Only run this step if there are changes
        run: |
          git config --global user.name "eviction-bot"
          git config --global user.email "actions@users.noreply.github.com"
          git pull --before # Fetch remote changes before adding local ones
          git add -A
          timestamp=$(date -u)
          
          # Logic for creating the right commit message
          if [ "${{ steps.geocoding.outputs.geocoding_complete }}" == "true" ]; then
            git commit -m "✅ New eviction data found and geocoded successfully: ${timestamp}"
          else
            git commit -m "⚠️ New eviction data found but geocoding incomplete: ${timestamp}"
          fi
          
          git push